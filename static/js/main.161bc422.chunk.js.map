{"version":3,"sources":["services/UserService.js","assets/images/no-image-available.svg","components/UserInfoCard.js","components/UserListComponent.js","App.js","reportWebVitals.js","index.js"],"names":["fetchUserList","Promise","reslove","reject","setTimeout","userList","error","handleImageError","e","target","src","NO_IMAGE","UserInfoCard","userInfo","className","avtar","onError","alt","first_name","last_name","dob","city","id","UserListComponent","useState","loading","setLoading","loadMoreLoader","setloadMoreLoader","userData","setUserData","hasError","setHasError","items","setItems","thisRef","useRef","useEffect","then","res","catch","infiniteScroll","current","addEventListener","scrollTop","clientHeight","scrollHeight","loadMore","ref","length","slice","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4/0EAIMA,EAAgB,IAAIC,SAAQ,SAACC,EAASC,GAExCC,YAAW,WACPF,GAAQ,WACJ,OAAOG,KAEXF,GAAO,SAACG,GACJ,OAAOA,OAND,QCLH,MAA0B,+CCGnCC,EAAmB,SAACC,GACxBA,EAAEC,OAAOC,IAAMC,GAmBFC,EAbM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACnB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKJ,IAAKG,EAASE,MAAOC,QAAST,EAAkBU,IAAI,YAE3D,sBAAKH,UAAU,YAAf,UACE,6BAAKD,EAASK,WAAa,IAAML,EAASM,YAC1C,oBAAGL,UAAU,cAAb,kBAAiCD,EAASO,KAAO,mBACjD,mBAAGN,UAAU,cAAb,SAA4BD,EAASQ,YAPdR,EAASS,KCuEvBC,G,MA1EW,WAAO,IAAD,EACAC,oBAAS,GADT,mBACvBC,EADuB,KACdC,EADc,OAEcF,oBAAS,GAFvB,mBAEvBG,EAFuB,KAEPC,EAFO,OAGEJ,mBAAS,IAHX,mBAGvBK,EAHuB,KAGbC,EAHa,OAIEN,oBAAS,GAJX,mBAIvBO,EAJuB,KAIbC,EAJa,OAKJR,mBAAS,IALL,mBAKvBS,EALuB,KAKhBC,EALgB,KAMxBC,EAAUC,mBAEhBC,qBAAU,WAORX,GAAW,GACX1B,EACGsC,MAAK,SAACC,GACLT,EAAYS,GACZP,GAAY,GACZN,GAAW,GACXE,GAAkB,MAEnBY,OAAM,WACLd,GAAW,GACXM,GAAY,MAfhBS,MACC,IAkBH,IAAMA,EAAiB,WACrBN,EAAQO,QAAQC,iBAAiB,UAAU,SAACnC,GAExC2B,EAAQO,QAAQE,UAAYT,EAAQO,QAAQG,cAC5CV,EAAQO,QAAQI,aAAe,IAE/BC,QAKAA,EAAW,WACfnB,GAAkB,GAClBxB,YAAW,WACT8B,GAAS,SAACD,GAAD,OAAWA,EAAQ,KAC5BL,GAAkB,KACjB,MAGL,OACE,qCACE,qBAAKd,UAAU,YAAYkC,IAAKb,EAAhC,SACGV,EACC,qBAAKX,UAAU,UAAf,wBACEiB,EACF,qBAAKjB,UAAU,QAAf,4BACEe,EAASoB,OAAS,EACpBpB,EACGqB,MAAM,EAAGjB,GACTkB,KAAI,SAACtC,GAAD,OACH,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASS,OAGhC,qBAAKR,UAAU,UAAf,4BAGJ,mCACGa,GACC,qBAAKb,UAAU,eAAf,yCC7DKsC,MAXf,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,mDACA,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,UCIOuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.161bc422.chunk.js","sourcesContent":["import userList from \"../mockdata/userList.json\";\n/**\n * Fetch User list\n */\nconst fetchUserList = new Promise((reslove, reject) => {\n    const delay = 2000; //added for demo purpose, need to be removed\n    setTimeout(()=> {\n        reslove(() => {\n            return userList\n        })\n        reject((error) => {\n            return error;\n        })\n    }, delay)\n})\n\nexport {\n    fetchUserList\n}","export default __webpack_public_path__ + \"static/media/no-image-available.aac965de.svg\";","import NO_IMAGE from \"./../assets/images/no-image-available.svg\";\n\n//to handle error if image is broken/not available\nconst handleImageError = (e) => {\n  e.target.src = NO_IMAGE;\n};\n\n/**\n * User Information card component component\n */\nconst UserInfoCard = ({userInfo}) => (\n  <div className=\"card\" key={userInfo.id}>\n    <div className=\"image\">\n      <img src={userInfo.avtar} onError={handleImageError} alt=\"avtar\" />\n    </div>\n    <div className=\"user-info\">\n      <h5>{userInfo.first_name + \" \" + userInfo.last_name}</h5>\n      <p className=\"accent-text\">DOB: {userInfo.dob || \"Not Available\"}</p>\n      <p className=\"accent-text\">{userInfo.city}</p>\n    </div>\n  </div>\n);\n\nexport default UserInfoCard;\n","import { useEffect, useState, useRef } from \"react\";\nimport { fetchUserList } from \"../services/UserService\";\nimport UserInfoCard from \"./UserInfoCard\";\nimport \"./../assets/css/UserListComponent.css\";\n\n/**\n * User list component\n */\nconst UserListComponent = () => {\n  const [loading, setLoading] = useState(false);\n  const [loadMoreLoader, setloadMoreLoader] = useState(false);\n  const [userData, setUserData] = useState([]);\n  const [hasError, setHasError] = useState(false);\n  const [items, setItems] = useState(10);\n  const thisRef = useRef();\n\n  useEffect(() => {\n    fetchData();\n    infiniteScroll();\n  }, []);\n\n  // fetch user data\n  function fetchData() {\n    setLoading(true);\n    fetchUserList\n      .then((res) => {\n        setUserData(res);\n        setHasError(false);\n        setLoading(false);\n        setloadMoreLoader(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setHasError(true);\n      });\n  }\n  // use for scroll data\n  const infiniteScroll = () => {\n    thisRef.current.addEventListener(\"scroll\", (e) => {\n      if (\n        thisRef.current.scrollTop + thisRef.current.clientHeight >=\n        thisRef.current.scrollHeight - 20\n      ) {\n        loadMore();\n      }\n    });\n  };\n\n  const loadMore = () => {\n    setloadMoreLoader(true);\n    setTimeout(() => {\n      setItems((items) => items + 5);\n      setloadMoreLoader(false);\n    }, 3000);\n  };\n\n  return (\n    <>\n      <div className=\"container\" ref={thisRef}>\n        {loading ? (\n          <div className=\"loading\">Loading...</div>\n        ) : hasError ? (\n          <div className=\"error\">Error occured.</div>\n        ) : userData.length > 0 ? (\n          userData\n            .slice(0, items)\n            .map((userInfo) => (\n              <UserInfoCard key={userInfo.id} userInfo={userInfo} />\n            ))\n        ) : (\n          <div className=\"loading\">No User Data</div>\n        )}\n      </div>\n      <>\n        {loadMoreLoader && (\n          <div className=\"loading-data\">User data Loading...</div>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default UserListComponent;\n","import './App.css';\nimport UserListComponent from \"./components/UserListComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <h3>Dynamic User List</h3>\n      <header className=\"App-header\" >\n        <UserListComponent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}